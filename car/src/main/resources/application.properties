quarkus.datasource.jdbc.url=jdbc:postgresql://192.168.56.138:5432/monsterdb
quarkus.datasource.username=monster
quarkus.datasource.password=password
quarkus.datasource.db-kind=postgresql
quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.http.port=8080
quarkus.http.host=192.168.56.1

quarkus.http.cors=true
quarkus.http.cors.origins=*
#quarkus.http.cors.methods=GEST, POST, PUT, DELETE
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true

consul.host=192.168.56.138
consul.port=8500

# configuracion de keycloak (oidc)
quarkus.oidc.auth-server-url=http://192.168.56.138:8181/auth/realms/quarkus
quarkus.oidc.client-id=frontend-service
quarkus.oidc.credentials.secret=secret

# console logging
quarkus.log.console.enable=true
quarkus.log.file.enable=true

# The Kafka broker location (defaults to localhost:9092)
#kafka.bootstrap.servers=192.168.56.138:9092
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:192.168.56.138:9092}

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.car-in.connector=smallrye-kafka
mp.messaging.incoming.car-in.topic=car
mp.messaging.incoming.car-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.incoming.car-in.value.deserializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.car-out.connector=smallrye-kafka
mp.messaging.outgoing.car-out.topic=car
mp.messaging.outgoing.car-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.car-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer